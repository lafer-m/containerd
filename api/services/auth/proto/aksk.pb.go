// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/aksk.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetAKSKReq struct {
	// 任务临时的 token, 由服务端下发任务时携带
	Token string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	// 时间戳, 校验数据的时效性
	Timestamp            int64    `protobuf:"varint,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAKSKReq) Reset()         { *m = GetAKSKReq{} }
func (m *GetAKSKReq) String() string { return proto.CompactTextString(m) }
func (*GetAKSKReq) ProtoMessage()    {}
func (*GetAKSKReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_9211b19cca003def, []int{0}
}

func (m *GetAKSKReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAKSKReq.Unmarshal(m, b)
}
func (m *GetAKSKReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAKSKReq.Marshal(b, m, deterministic)
}
func (m *GetAKSKReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAKSKReq.Merge(m, src)
}
func (m *GetAKSKReq) XXX_Size() int {
	return xxx_messageInfo_GetAKSKReq.Size(m)
}
func (m *GetAKSKReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAKSKReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAKSKReq proto.InternalMessageInfo

func (m *GetAKSKReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GetAKSKReq) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type GetAKSKResp struct {
	AccessKeyId          string   `protobuf:"bytes,1,opt,name=AccessKeyId,proto3" json:"AccessKeyId,omitempty"`
	SecretAccessKey      string   `protobuf:"bytes,2,opt,name=SecretAccessKey,proto3" json:"SecretAccessKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAKSKResp) Reset()         { *m = GetAKSKResp{} }
func (m *GetAKSKResp) String() string { return proto.CompactTextString(m) }
func (*GetAKSKResp) ProtoMessage()    {}
func (*GetAKSKResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_9211b19cca003def, []int{1}
}

func (m *GetAKSKResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAKSKResp.Unmarshal(m, b)
}
func (m *GetAKSKResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAKSKResp.Marshal(b, m, deterministic)
}
func (m *GetAKSKResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAKSKResp.Merge(m, src)
}
func (m *GetAKSKResp) XXX_Size() int {
	return xxx_messageInfo_GetAKSKResp.Size(m)
}
func (m *GetAKSKResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAKSKResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetAKSKResp proto.InternalMessageInfo

func (m *GetAKSKResp) GetAccessKeyId() string {
	if m != nil {
		return m.AccessKeyId
	}
	return ""
}

func (m *GetAKSKResp) GetSecretAccessKey() string {
	if m != nil {
		return m.SecretAccessKey
	}
	return ""
}

type VerifyAKSKReq struct {
	AccessKeyId          string   `protobuf:"bytes,1,opt,name=AccessKeyId,proto3" json:"AccessKeyId,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Signature            string   `protobuf:"bytes,4,opt,name=Signature,proto3" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyAKSKReq) Reset()         { *m = VerifyAKSKReq{} }
func (m *VerifyAKSKReq) String() string { return proto.CompactTextString(m) }
func (*VerifyAKSKReq) ProtoMessage()    {}
func (*VerifyAKSKReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_9211b19cca003def, []int{2}
}

func (m *VerifyAKSKReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyAKSKReq.Unmarshal(m, b)
}
func (m *VerifyAKSKReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyAKSKReq.Marshal(b, m, deterministic)
}
func (m *VerifyAKSKReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyAKSKReq.Merge(m, src)
}
func (m *VerifyAKSKReq) XXX_Size() int {
	return xxx_messageInfo_VerifyAKSKReq.Size(m)
}
func (m *VerifyAKSKReq) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyAKSKReq.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyAKSKReq proto.InternalMessageInfo

func (m *VerifyAKSKReq) GetAccessKeyId() string {
	if m != nil {
		return m.AccessKeyId
	}
	return ""
}

func (m *VerifyAKSKReq) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *VerifyAKSKReq) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *VerifyAKSKReq) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type VerifyASKSResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyASKSResp) Reset()         { *m = VerifyASKSResp{} }
func (m *VerifyASKSResp) String() string { return proto.CompactTextString(m) }
func (*VerifyASKSResp) ProtoMessage()    {}
func (*VerifyASKSResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_9211b19cca003def, []int{3}
}

func (m *VerifyASKSResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyASKSResp.Unmarshal(m, b)
}
func (m *VerifyASKSResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyASKSResp.Marshal(b, m, deterministic)
}
func (m *VerifyASKSResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyASKSResp.Merge(m, src)
}
func (m *VerifyASKSResp) XXX_Size() int {
	return xxx_messageInfo_VerifyASKSResp.Size(m)
}
func (m *VerifyASKSResp) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyASKSResp.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyASKSResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetAKSKReq)(nil), "proto.GetAKSKReq")
	proto.RegisterType((*GetAKSKResp)(nil), "proto.GetAKSKResp")
	proto.RegisterType((*VerifyAKSKReq)(nil), "proto.VerifyAKSKReq")
	proto.RegisterType((*VerifyASKSResp)(nil), "proto.VerifyASKSResp")
}

func init() { proto.RegisterFile("proto/aksk.proto", fileDescriptor_9211b19cca003def) }

var fileDescriptor_9211b19cca003def = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xb1, 0x4f, 0x83, 0x40,
	0x14, 0x87, 0x83, 0xb5, 0x46, 0x1e, 0xb1, 0xd2, 0x97, 0x9a, 0x90, 0xc6, 0x81, 0x30, 0x31, 0xd1,
	0x44, 0x07, 0x07, 0x97, 0xe2, 0xd2, 0x98, 0x8b, 0x0b, 0xd7, 0x98, 0xe8, 0x86, 0xf8, 0xac, 0x84,
	0xb4, 0xe0, 0xdd, 0xd5, 0xa4, 0x93, 0xab, 0x7f, 0xb6, 0xe1, 0xb8, 0x96, 0xc2, 0xe2, 0x74, 0x8f,
	0xef, 0xf1, 0xbe, 0xfc, 0xde, 0x03, 0xb7, 0x12, 0xa5, 0x2a, 0x67, 0x69, 0x21, 0x8b, 0x48, 0x97,
	0x38, 0xd4, 0x4f, 0x30, 0x07, 0x58, 0x90, 0x8a, 0x19, 0x67, 0x09, 0x7d, 0xe1, 0x04, 0x86, 0xcb,
	0xb2, 0xa0, 0x8d, 0x67, 0xf9, 0x56, 0x68, 0x27, 0xcd, 0x07, 0x5e, 0x83, 0xbd, 0xcc, 0xd7, 0x24,
	0x55, 0xba, 0xae, 0xbc, 0x13, 0xdf, 0x0a, 0x07, 0x49, 0x0b, 0x82, 0x17, 0x70, 0x0e, 0x06, 0x59,
	0xa1, 0x0f, 0x4e, 0x9c, 0x65, 0x24, 0x25, 0xa3, 0xdd, 0xe3, 0xbb, 0x11, 0x1d, 0x23, 0x0c, 0xe1,
	0x92, 0x53, 0x26, 0x48, 0x1d, 0xa0, 0x96, 0xda, 0x49, 0x1f, 0x07, 0x3f, 0x70, 0xf1, 0x4c, 0x22,
	0xff, 0xd8, 0xed, 0xf3, 0xfd, 0x2f, 0x77, 0x61, 0xf0, 0x24, 0x57, 0x46, 0x58, 0x97, 0xdd, 0xf4,
	0x83, 0x5e, 0xfa, 0xba, 0xcb, 0xf3, 0xd5, 0x26, 0x55, 0x5b, 0x41, 0xde, 0xa9, 0x9e, 0x6a, 0x41,
	0xe0, 0xc2, 0xc8, 0x04, 0xe0, 0x8c, 0xd7, 0xeb, 0xdd, 0xfc, 0x5a, 0xe0, 0x70, 0x12, 0xdf, 0x79,
	0x46, 0xf1, 0x56, 0x7d, 0xe2, 0x1d, 0x8c, 0x16, 0xa4, 0xf6, 0x84, 0x71, 0x86, 0xe3, 0xe6, 0xc0,
	0x51, 0x7b, 0xd6, 0x29, 0xf6, 0x91, 0xac, 0x70, 0x0e, 0xe3, 0x46, 0x7d, 0x3c, 0x3b, 0x31, 0x3f,
	0x76, 0xb6, 0x9e, 0x5e, 0x75, 0xa9, 0x89, 0xf2, 0x00, 0xaf, 0xe7, 0xd1, 0xec, 0x5e, 0xb7, 0xde,
	0xce, 0xf4, 0x73, 0xfb, 0x17, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x5c, 0xca, 0x5f, 0xe8, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceAuthClient is the client API for ServiceAuth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceAuthClient interface {
	GetServiceAKSK(ctx context.Context, in *GetAKSKReq, opts ...grpc.CallOption) (*GetAKSKResp, error)
	VerifyServiceAKSK(ctx context.Context, in *VerifyAKSKReq, opts ...grpc.CallOption) (*VerifyASKSResp, error)
}

type serviceAuthClient struct {
	cc *grpc.ClientConn
}

func NewServiceAuthClient(cc *grpc.ClientConn) ServiceAuthClient {
	return &serviceAuthClient{cc}
}

func (c *serviceAuthClient) GetServiceAKSK(ctx context.Context, in *GetAKSKReq, opts ...grpc.CallOption) (*GetAKSKResp, error) {
	out := new(GetAKSKResp)
	err := c.cc.Invoke(ctx, "/proto.ServiceAuth/GetServiceAKSK", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceAuthClient) VerifyServiceAKSK(ctx context.Context, in *VerifyAKSKReq, opts ...grpc.CallOption) (*VerifyASKSResp, error) {
	out := new(VerifyASKSResp)
	err := c.cc.Invoke(ctx, "/proto.ServiceAuth/VerifyServiceAKSK", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceAuthServer is the server API for ServiceAuth service.
type ServiceAuthServer interface {
	GetServiceAKSK(context.Context, *GetAKSKReq) (*GetAKSKResp, error)
	VerifyServiceAKSK(context.Context, *VerifyAKSKReq) (*VerifyASKSResp, error)
}

func RegisterServiceAuthServer(s *grpc.Server, srv ServiceAuthServer) {
	s.RegisterService(&_ServiceAuth_serviceDesc, srv)
}

func _ServiceAuth_GetServiceAKSK_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAKSKReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceAuthServer).GetServiceAKSK(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServiceAuth/GetServiceAKSK",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceAuthServer).GetServiceAKSK(ctx, req.(*GetAKSKReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceAuth_VerifyServiceAKSK_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyAKSKReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceAuthServer).VerifyServiceAKSK(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServiceAuth/VerifyServiceAKSK",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceAuthServer).VerifyServiceAKSK(ctx, req.(*VerifyAKSKReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceAuth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ServiceAuth",
	HandlerType: (*ServiceAuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetServiceAKSK",
			Handler:    _ServiceAuth_GetServiceAKSK_Handler,
		},
		{
			MethodName: "VerifyServiceAKSK",
			Handler:    _ServiceAuth_VerifyServiceAKSK_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/aksk.proto",
}
