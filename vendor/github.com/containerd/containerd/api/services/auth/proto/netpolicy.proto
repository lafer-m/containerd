syntax = "proto3";

package proto;


option go_package = "./;proto";


enum NetPolicyType{
  IP = 0;
  Segment = 1;
}

enum NetPolicyProtocol {
  TCP = 0;
  UDP = 1;
}

enum NetPolicyAccessType {
  Permit = 0;
  Deny = 1;
}

enum PolicyDirection {
  Input = 0;
  Output = 1;
}

message NetPolicy {
  // 指定策略类型 IP 网段
  NetPolicyType Type = 1;
  // 在哪个协议上生效 tcp/udp
  NetPolicyProtocol Protocol = 2;
  // 作用的端口
  // 支持单个端口 80
  // 支持多个端口. 以 逗号 分割, 80,81
  // 支持端口范围 8080-8088
  string  Port = 3;
  // ip地址
  string Value = 4;
  // 允许访问, 或者拒绝
  NetPolicyAccessType AccessType = 5;
  // 是否使用
  bool IsActive = 6;
  // 策略的方向, input or output
  PolicyDirection Direction = 7;
}


message PolicyGroup {
  // 策略组名称
  string Name = 1;
  repeated NetPolicy NetworkPolicy = 2;
  // 默认策略类型, 全部放行或者全部拦截
  NetPolicyAccessType Default = 3;
}

message FetchPolicyReq {
  string AccessKeyId = 1;
  string Msg = 2;
  int64 Timestamp = 3;
  string Signature = 4;
}

message FetchPolicyResp {
  repeated PolicyGroup Group = 1;
}

service Policy {
  rpc FetchPolicy(FetchPolicyReq) returns(FetchPolicyResp);
}